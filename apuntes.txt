pwd   // dice el directorio actual

ls  // lista los archivos

ls -al  // lista con detalle y archivos ocultos.

cd c:  // cambio al disco C
cd d: // cambio al disco d

cd .. subo al directorio padre.
cd . ir directorio actual.

cd /  raiz del equipo o servidor

cd  o  cd ~ // ir al home del  usuario

cd nombre_carpeta  // ir a la carpeta y entrar

rm -rf nombre_directorio    // elimina de manera recursiva y a la fuerza una carpeta.

rm -rf .git  // elimina el repositorio GIT de la carpeta actual  // BAJO SU RESPONSABLIDAD

____ USO DE VIM ____

vim <<nombrearchivo>> // entro al editor
tecla <<a>> o <<insert>>  // entro al modo EDITOR
tecla <<ESC>>  // salgo del modo EDITOR
:q   // SALIR
:!q  // SALIR SIN GUARDAR
:w // guardar
:wq // GUARDAR Y SALIR

------

pwd // donde estamos parados. en que carpeta.

ALIAS
git config --global alias.lg "log --oneline --decorate --all --graph" // crear alias lg
git  config --global alias.s "status -s -b" // alias para status

CONFIGURACION
git config --global --list // lista variables configuradas
git config --global user.name "Tu nombre" // nombre para registrar cambios en GIT local
git config --global user.email tucorreo@ejemplo.com // correo de usuario

Flujo
git init  // inicializa el repositorio en la carpeta ACTUAL. OJO ACTUAL.
git add .  // subimos archivos al stage. 
git commit -m "comentario del commit"

Visualizar cambio
git log // muestras los varios commits hechos

Borra cambios - Regresa a una version especifica
git checkout . // descarta cambios en directorio de trabajo. operacion irreversible
git reset <commit hash> --hard  // vuelve a el estado del COMMIT tal cual como lo dejamos al momento de hacerlo. volvemos al pasado. Vuelve a un hash conocido



git remote add origin <<su ruta>>
git push -u origin master


PAG DE PRACTICA
https://learngitbranching.js.org/?locale=es_AR&NODEMO=
